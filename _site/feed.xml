<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description></description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 03 Mar 2021 17:44:58 +0700</pubDate>
    <lastBuildDate>Wed, 03 Mar 2021 17:44:58 +0700</lastBuildDate>
    <generator>Jekyll v3.9.0</generator>
    
      <item>
        <title>10 Error status codes khi xây dựng API và cách giải quyết chúng</title>
        <description>&lt;p&gt;Link bài viết gốc: https://www.moesif.com/blog/technical/monitoring/10-Error-Status-Codes-When-Building-APIs-For-The-First-Time-And-How-To-Fix-Them/
10 Error Status Codes When Building APIs For The First Time And How To Fix Them&lt;/p&gt;
</description>
        <pubDate>Tue, 09 Jun 2020 07:48:45 +0700</pubDate>
        <link>http://localhost:4000/life/2020/06/09/10-errors-when-build-api-and-how-to-fix-them/</link>
        <guid isPermaLink="true">http://localhost:4000/life/2020/06/09/10-errors-when-build-api-and-how-to-fix-them/</guid>
        
        
        <category>life</category>
        
      </item>
    
      <item>
        <title>Bản thân bạn đang ở đâu ?</title>
        <description>&lt;p&gt;Q: Làm sao để ngưng lười biếng và trì hoãn?&lt;/p&gt;

&lt;p&gt;A: Farhan Shamir&lt;/p&gt;

&lt;p&gt;Link: https://qr.ae/pNKIeo&lt;/p&gt;

&lt;p&gt;Khi 13 tuổi, tôi đã tham gia Olympic Thiên văn học Quốc tế 2013 nhưng không thể giành được huy chương. Tôi ra về trong một tâm trạng buồn bã và đau đớn. Nhưng tôi nghĩ mình xứng đáng với điều đó: có lẽ tôi cần phải đập đầu của mình vào tường một lần để biết được rằng lười biếng là liều thuốc độc giết chết thành công. Nó gặm nhấm cuộc sống của bạn trong khi bạn đang xem TV, lướt Facebook.&lt;/p&gt;

&lt;p&gt;Kể từ đó, tôi đăng xuất Facebook, bắt đầu luyện tập cho Olympic – cố gắng kết hợp cả khoa học và bóng rổ. Và rồi, tôi đã giành được 6 huy chương Olympic Khoa học quốc tế, 5 huy chương vàng Giải vô địch bóng rổ quốc gia và được nhận vào Đại học Cambridge.&lt;/p&gt;

&lt;p&gt;Bây giờ, tôi tự hỏi mình: Làm cách nào tôi đã vượt qua được sự lười biếng? Tôi đã bắt đầu như thế nào?&lt;/p&gt;

&lt;p&gt;Và rồi tôi nhận ra, câu trả lời, thật sự đơn giản…&lt;/p&gt;

&lt;p&gt;CHỈ LÀ TÔI HÀNH ĐỘNG&lt;/p&gt;

&lt;p&gt;Không có bí mật nào ở đây! Cho dù bạn đọc bao nhiêu lời khuyên như “Để tiêu diệt sự lười biếng thì bạn cần 5 điều sau đây” trên Quora hay các blog phát triển bản thân (Self-development) thì vẫn bạn sẽ không bao giờ thành công nếu bạn không lựa chọn.&lt;/p&gt;

&lt;p&gt;Khi phải lựa chọn giữa việc chơi game hay làm việc, tôi chọn vế sau.
Khi phải lựa chọn giữa việc đi chơi với bạn bè hay tập ném bóng, tôi chọn vế sau&lt;/p&gt;

&lt;p&gt;Bạn KHÔNG THỂ ngăn được sự lười biếng của mình nếu bạn không thể sử dụng sức mạnh ý chí của mình để tạo nên sự khác biệt!
Tôi nghĩ rằng tất cả chúng ta đều biết cách để chấm dứt sự lười biếng. Một thứ mà chỉ một vài người trong chúng ta lựa chọn…&lt;/p&gt;

&lt;p&gt;HÀNH ĐỘNG&lt;/p&gt;

&lt;p&gt;Không phải ngày mai hay sinh nhật. Bắt đầu. NGAY LẬP TỨC!&lt;/p&gt;

&lt;p&gt;Lựa chọn. Quyết định cho chính mình. Bạn muốn gì?&lt;/p&gt;

&lt;p&gt;Một cuộc sống vui vẻ? Thú vị? Đầy phiêu lưu?&lt;/p&gt;

&lt;p&gt;TỐT! Bắt đầu hành động ngay đi!&lt;/p&gt;

&lt;p&gt;Cuộc sống mơ ước luôn ở trong tầm tay bạn. Luôn thúc đẩy bản thân mình.
Chỉ cần luôn thúc đẩy bản thân mình thôi.&lt;/p&gt;
</description>
        <pubDate>Tue, 09 Jun 2020 07:48:45 +0700</pubDate>
        <link>http://localhost:4000/life/2020/06/09/keep/</link>
        <guid isPermaLink="true">http://localhost:4000/life/2020/06/09/keep/</guid>
        
        
        <category>life</category>
        
      </item>
    
      <item>
        <title>Rails Map Vs Pluck</title>
        <description>
</description>
        <pubDate>Wed, 27 May 2020 00:00:00 +0700</pubDate>
        <link>http://localhost:4000/2020/05/27/rails-map-vs-pluck/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/05/27/rails-map-vs-pluck/</guid>
        
        
      </item>
    
      <item>
        <title>Chuan Hoa Csdl</title>
        <description>
</description>
        <pubDate>Wed, 27 May 2020 00:00:00 +0700</pubDate>
        <link>http://localhost:4000/2020/05/27/chuan-hoa-csdl/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/05/27/chuan-hoa-csdl/</guid>
        
        
      </item>
    
      <item>
        <title>Rails cucumber - capybara notes</title>
        <description>
</description>
        <pubDate>Fri, 08 May 2020 19:48:45 +0700</pubDate>
        <link>http://localhost:4000/tech/2020/05/08/rails-rails-ckeditor-mention-with-elaticsearch/</link>
        <guid isPermaLink="true">http://localhost:4000/tech/2020/05/08/rails-rails-ckeditor-mention-with-elaticsearch/</guid>
        
        
        <category>tech</category>
        
      </item>
    
      <item>
        <title>Rails elaticsearch - 1.Introduction</title>
        <description>
</description>
        <pubDate>Fri, 08 May 2020 19:48:45 +0700</pubDate>
        <link>http://localhost:4000/tech/2020/05/08/rails-elaticsearch-1-introduction/</link>
        <guid isPermaLink="true">http://localhost:4000/tech/2020/05/08/rails-elaticsearch-1-introduction/</guid>
        
        
        <category>tech</category>
        
      </item>
    
      <item>
        <title>Test behavior với cucumber và capybara</title>
        <description>&lt;p&gt;Hello cả nhà, cũng tương đối lâu rồi mình chưa quay lại. Một là do có sự thay đổi công việc nên hơi bận bịu. Hai là công việc mới khiến mình chưa thể cover được thời gian của bản thân. Hôm nay mình note lại một trong những điều khá hay ho mà mình gặp phải trong dự án.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Nhắc đến test trong rails hẳn ai cũng nhắc đến Rspec cùng tác dụng và sự vi diệu của nó nhưng Rspec chỉ hỗ trợ&lt;/p&gt;

&lt;p&gt;Đầu tiên nhắc đến test, ngay từ lúc đầu giữa các khái niệm &lt;code&gt;rspec&lt;/code&gt;, &lt;code&gt;capybara&lt;/code&gt; và &lt;code&gt;cucumber&lt;/code&gt; nên mình cũng sẽ nhắc lại và so sánh để &lt;code&gt;cùng&lt;/code&gt; nhớ lại ;)&lt;/p&gt;

&lt;hr /&gt;

</description>
        <pubDate>Fri, 08 May 2020 19:48:45 +0700</pubDate>
        <link>http://localhost:4000/tech/2020/05/08/rails-cucumber-capybara-notes/</link>
        <guid isPermaLink="true">http://localhost:4000/tech/2020/05/08/rails-cucumber-capybara-notes/</guid>
        
        
        <category>tech</category>
        
      </item>
    
      <item>
        <title>Đừng bao giờ `git push -f`</title>
        <description>
</description>
        <pubDate>Fri, 08 May 2020 07:48:45 +0700</pubDate>
        <link>http://localhost:4000/tech/2020/05/08/dung-bao-gio-git-push-f/</link>
        <guid isPermaLink="true">http://localhost:4000/tech/2020/05/08/dung-bao-gio-git-push-f/</guid>
        
        
        <category>tech</category>
        
      </item>
    
      <item>
        <title>Rails rspec notes</title>
        <description>&lt;h3 id=&quot;mock-vs-stub&quot;&gt;Mock vs stub&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Stub
    &lt;blockquote&gt;
      &lt;p&gt;Returns canned responses, avoiding any meaningful computation or I/O&lt;/p&gt;
    &lt;/blockquote&gt;

    &lt;p&gt;=&amp;gt; Tra ve ket qua a
 ex:&lt;/p&gt;
    &lt;blockquote&gt;
      &lt;p&gt;allow(some_object).to receive(some_method).and_return(some_value)&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;Mock
    &lt;blockquote&gt;
      &lt;p&gt;Expects specific messages; will raise an error if it doesn’t receive them by the end of the example&lt;/p&gt;
    &lt;/blockquote&gt;

    &lt;p&gt;ex:&lt;/p&gt;
    &lt;blockquote&gt;
      &lt;p&gt;expect(some_object).to receive(some_method).and_return(some_value)&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;double&quot;&gt;Double&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;double(*args) public
     Shortcut for creating an instance of Spec::Mocks::Mock.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;name is used for failure reporting, so you should use the role that the double is playing in the example.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;stubs_and_options lets you assign options and stub values at the same time. The only option available is :null_object. Anything else is treated as a stub value.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ex:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;thing = double(“thing”, :a =&amp;gt; “A”)
      thing.a == “A” =&amp;gt; true
      person = double(“thing”, :name =&amp;gt; “Joe”, :email =&amp;gt; “joe@domain.com”)
      person.name =&amp;gt; “Joe”
      person.email =&amp;gt; “joe@domain.com”&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Fri, 08 May 2020 07:48:45 +0700</pubDate>
        <link>http://localhost:4000/tech/2020/05/08/rails-rspec-notes/</link>
        <guid isPermaLink="true">http://localhost:4000/tech/2020/05/08/rails-rspec-notes/</guid>
        
        
        <category>tech</category>
        
      </item>
    
      <item>
        <title>form_with — Building HTML forms in Rails 5.1</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;Bài viết lấy nguồn từ bài viết &lt;a href=&quot;https://medium.com/@tinchorb/form-with-building-html-forms-in-rails-5-1-f30bd60ef52d&quot;&gt;form_with — Building HTML forms in Rails 5.1
&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A couple of months ago a PR created by kaspth was merged to rails 5.1, introducing the form_with view helper. The idea behind it is to unify the interface of form_tag and form_for by extracting both implementations to a common object. As long as developers start using this new helper, form_tag and form_for will softly get deprecated.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Một vài tháng trước, một pull request &lt;a href=&quot;https://github.com/rails/rails/pull/26976&quot;&gt;Pr&lt;/a&gt; được tạo bởi một thím với nickname &lt;code&gt;kasspth&lt;/code&gt; đã được merge vào rails 5.1 (Thời điểm tôi dịch bài này thì rails 6 đã release và sắp ra rails 7 mất rồi =))). Giới thiệu về &lt;code&gt;form_with&lt;/code&gt; trong phần hỗ trợ hiển thị. Ý tưởng đằng sau là thống nhất lại giao diện của &lt;code&gt;form_tag&lt;/code&gt; và &lt;code&gt;form_for&lt;/code&gt;bằng cách trích xuất cả hai triển khai trên vào một đối tượng chung. Miễn là các lập trình viên bắt đầu sử dụng helper mới này, &lt;code&gt;form_tag&lt;/code&gt; và &lt;code&gt;form_for&lt;/code&gt; sẽ dần dần được lãng quên.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;1-a-litte-bit-of-background&quot;&gt;1. A litte bit of background&lt;/h3&gt;
&lt;p&gt;(Chém gió một chút về bối cảnh)&lt;/p&gt;

&lt;p&gt;Let’s say that you have a Post model and want to create a new instance of it. In Rails 4, the form_for view helper allows you to create a form for it:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hãy tưởng tượng bạn có một model &lt;code&gt;Post&lt;/code&gt; và muốn tạo thêm đối tượng cho nó. Trong rails 4, &lt;code&gt;form_for&lt;/code&gt; đã hỗ trợ tận răng và cho phép bạn tạo form cho nó như sau:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;%= form_for @post do |form| %&amp;gt;
 &amp;lt;%= form.text_field :author %&amp;gt;
 &amp;lt;%= form.submit “Create” %&amp;gt;
&amp;lt;% end %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Một view tương ứng html sẽ được sinh ra (a view html will be created)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;form class=”new_post” id=”new_post” action=”/posts” accept-charset=”UTF-8&quot; method=”post”&amp;gt;
 &amp;lt;input name=”utf8&quot; type=”hidden” value=”✓”&amp;gt;
 &amp;lt;input type=”hidden” name=”authenticity_token” value=”…”&amp;gt;
 &amp;lt;input type=”text” name=”post[author]” id=”post_author”&amp;gt;
 &amp;lt;input type=”submit” name=”commit” value=”Create” data-disable-with=”Create”&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The variable form yielded to the block is a FormBuilder object that incorporates the knowledge about the model object represented by :post passed to form_for.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Các giá trị trong block form là đối tượng được tạo ra bởi đối tượng &lt;code&gt;FormBuilder&lt;/code&gt; kết hợp với thông tin được cung cấp bởi &lt;code&gt;:post&lt;/code&gt; truyền vào &lt;code&gt;form_for&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What happens when you need to create a form but you don’t have an underlying model instance? Rails provides us with the form_tag helper:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;ĐIều gì sẽ xảy ra nếu bạn muốn tạo một &lt;code&gt;form&lt;/code&gt; mà không muốn cung cấp một đối tượng của model ? Khi đó rails sẽ cung cấp &lt;code&gt;form_tag&lt;/code&gt; helper.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;%= form_tag “/posts” do %&amp;gt;
 &amp;lt;%= text_field_tag “post[author]” %&amp;gt;
 &amp;lt;%= submit_tag “Create” %&amp;gt;
&amp;lt;% end %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;form action=”/posts” accept-charset=”UTF-8&quot; method=”post”&amp;gt;
 &amp;lt;input name=”utf8&quot; type=”hidden” value=”✓”&amp;gt;
 &amp;lt;input type=”hidden” name=”authenticity_token” value=”…”&amp;gt;
 &amp;lt;input type=”text” name=“post[author]” id=“post_author”&amp;gt;
 &amp;lt;input type=”submit” name=”commit” value=“Create” data-disable-with=“Create”&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There is no FormBuilder object in this second form. For each field that you need to add to the form, you need to use the correspondent input tag, such as text_field_tag.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Không có object &lt;code&gt;FormBuilder&lt;/code&gt; trên form thứ hai.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Sun, 08 Mar 2020 00:00:00 +0700</pubDate>
        <link>http://localhost:4000/tech/2020/03/08/form_with-vs-form_tag/</link>
        <guid isPermaLink="true">http://localhost:4000/tech/2020/03/08/form_with-vs-form_tag/</guid>
        
        
        <category>tech</category>
        
      </item>
    
  </channel>
</rss>

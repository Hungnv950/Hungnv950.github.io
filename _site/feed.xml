<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description></description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 02 Apr 2021 10:30:37 +0700</pubDate>
    <lastBuildDate>Fri, 02 Apr 2021 10:30:37 +0700</lastBuildDate>
    <generator>Jekyll v3.9.0</generator>
    
      <item>
        <title>Amazon Simple Email Service</title>
        <description>&lt;h1 id=&quot;amazon-simple-email-service&quot;&gt;Amazon Simple Email Service&lt;/h1&gt;

&lt;p&gt;https://docs.aws.amazon.com/ses/latest/DeveloperGuide/Welcome.html&lt;/p&gt;

&lt;p&gt;Lâu rồi mới quay lại viết blog thay vì dịch tài liệu. Hôm nay có 1 task liên quan tới việc chuyển server mail từ SendGrid về ASW SES nên mình note lại các ý chính luôn. Chắc là sẽ có 1 series về phần này luôn.&lt;/p&gt;

&lt;p&gt;Trước tiên như mọi bài blog khác thì sẽ vào phần introduction luôn.&lt;/p&gt;
&lt;h3 id=&quot;giới-thiệu---amazon-ses-là-gì-&quot;&gt;Giới thiệu - Amazon SES là gì ?&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;Amazon SES là một nền tảng email cung cấp dễ dàng và tiết kiệm chi phí cho bạn có thể gửi và nhận email sử dụng email sử dụng địa chỉ email và domains của bạn.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Như thế thì đơn giản quá nhỉ. Nếu thế thì tại sao lại phải sử dụng AWS SES ?&lt;/p&gt;

&lt;p&gt;Theo như trên trang chủ của AWS thì có vẻ hợp lý:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Xây dựng một giải pháp quản lý email lớn thường rát phức tạp và tốn chi phí cho doanh nghiệp. bạn càn phải đối mặt với những thách thức về cơ sở hạ tầng cũng như quản lý máy chủ, config network và địa chỉ IP. Hơn nữa nhiều giải pháp email của bên thứ ba yêu cầu thương lượng hợp đồng và giá cả, cũng như phải trả trước một chi phí đáng kể. Amazon SES đã loại bỏ những vấn đề này và cho phép bạn thừa hưởng các lợi ích nhiều năng kinh nghiệm và cấu trúc server phức tạo từ Amazon.com đã xây dựng để phục vụ cơ sở hạ tầng lớn của họ.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;amazon-ses-and-other-aws-services&quot;&gt;Amazon SES and other AWS services&lt;/h3&gt;
&lt;p&gt;Amazon SES integrates seamlessly with other AWS products. For example, you can:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Amazon SES tích hợp một cách liền mạch với các sản phầm khác của AWS. Như ví dụ, bạn có thể:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Add email-sending capabilities to any application. If your application runs in &lt;a href=&quot;https://aws.amazon.com/ec2/&quot;&gt;Amazon Elastic Compute Cloud&lt;/a&gt; (Amazon EC2), you can use Amazon SES to send &lt;a href=&quot;https://aws.amazon.com/ses/pricing/&quot;&gt;62,000 emails every month at no additional charge&lt;/a&gt;. You can send email from Amazon EC2 by using an &lt;a href=&quot;https://aws.amazon.com/tools/#sdk&quot;&gt;AWS SDK&lt;/a&gt;, by using the Amazon &lt;a href=&quot;Amazon SES SMTP interface&quot;&gt;SES SMTP&lt;/a&gt; interface, or by making calls directly to the Amazon &lt;a href=&quot;https://docs.aws.amazon.com/ses/latest/APIReference/&quot;&gt;SES API&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Thêm khả năng gửi mail vào bất cứ ứng dụng nào. Nếu ứng dụng đang chạy trên &lt;a href=&quot;https://aws.amazon.com/ec2/&quot;&gt;Amazon Elastic Compute Cloud&lt;/a&gt; (Amazon EC2), bạn có thể sử dụng Amazon SES để gửi &lt;a href=&quot;https://aws.amazon.com/ses/pricing/&quot;&gt;62,000 email mỗi tháng mà không cần phải trả thêm phí&lt;/a&gt;. Bạn có thể gửi email từ Amazon EC2 bằng cách sử dụng &lt;a href=&quot;https://aws.amazon.com/tools/#sdk&quot;&gt;AWS SDK&lt;/a&gt;, bằng cách sử dụng phương thức Amazon &lt;a href=&quot;Amazon SES SMTP interface&quot;&gt;SES SMTP&lt;/a&gt;, hoặc bằng cách gửi trực tiếp từ Amazon &lt;a href=&quot;https://docs.aws.amazon.com/ses/latest/APIReference/&quot;&gt;SES API&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Use &lt;a href=&quot;https://aws.amazon.com/elasticbeanstalk/&quot;&gt;AWS Elastic Beanstalk&lt;/a&gt; to create an email-enabled application such as a program that uses Amazon SES to send a newsletter to customers.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Sử dụng &lt;a href=&quot;https://aws.amazon.com/elasticbeanstalk/&quot;&gt;AWS Elastic BeanStalk&lt;/a&gt; để tạo 1 ứng dụng hỗ trợ email giống như một chương trình sử dụng Amazon SES để gửi tới những người dùng mới.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Set up &lt;a href=&quot;https://aws.amazon.com/sns/&quot;&gt;Amazon Simple Notification Service (Amazon SNS)&lt;/a&gt; to notify you of your emails that bounced, produced a complaint, or were successfully delivered to the recipient’s mail server. When you use Amazon SES to receive emails, your email content can be published to Amazon SNS topics.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Cài đặt &lt;a href=&quot;https://aws.amazon.com/sns/&quot;&gt;Amazon Simple Notification Service (Amazon SNS)&lt;/a&gt; để thông báo cho bạn những email bị trả lại, đưa ra phàn nàn, hoặc đã gửi thành công cho server nhận mail. Khi bạn sử dụng Amazon SES để nhận emmails, nội dung email của bạn có thể được xuất bản lên topics của Amazon SNS&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Use the AWS Management Console to set up &lt;a href=&quot;https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-authentication-dkim.html&quot;&gt;Easy DKIM&lt;/a&gt;, which is a way to authenticate your emails. Although you can use Easy DKIM with any DNS provider, it is especially easy to set up when you manage your domain with Route 53.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Sử dụng AWS Management Console để cài đặt &lt;a href=&quot;https://docs.aws.amazon.com/ses/latest/DeveloperGuide/send-email-authentication-dkim.html&quot;&gt;Easy DKIM&lt;/a&gt;, là cách để xác thực email của bạn. Tuy nhiên bạn có thể sử dụng Easy DKIM với bất kì nhà cung cấp DNS nào, nó cơ bản đơn giản để cài đặt khi bạn quản lý domain với Route 53&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Control user access to your email sending by using &lt;a href=&quot;https://aws.amazon.com/iam/&quot;&gt;AWS Identity and Access Management (IAM)&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Quản lý truy cập người dùng vào email gửi của bạn bằng cách sử dụng &lt;a href=&quot;https://aws.amazon.com/iam/&quot;&gt;AWS Identity and Access Management (IAM)&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Store emails you receive in Amazon Simple Storage &lt;a href=&quot;https://aws.amazon.com/s3/&quot;&gt;Service (Amazon S3)&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Lưu trữ những email bạn nhận được trong Amazon Simple Storage &lt;a href=&quot;https://aws.amazon.com/s3/&quot;&gt;Service (Amazon S3)&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Take action on your received emails by triggering &lt;a href=&quot;https://aws.amazon.com/lambda/&quot;&gt;AWS Lambda functions&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Thực hiện hành động với các email nhận được bằng cách sử dụng trigger &lt;a href=&quot;https://aws.amazon.com/lambda/&quot;&gt;AWS Lambda function&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Use &lt;a href=&quot;https://aws.amazon.com/kms/&quot;&gt;AWS Key Management Service (AWS KMS)&lt;/a&gt; to optionally encrypt the mail you receive in your Amazon S3 bucket.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Sử dụng &lt;a href=&quot;https://aws.amazon.com/kms/&quot;&gt;AWS Key Management Service (AWS KMS)&lt;/a&gt; để có thể tuỳ chọn mã hoá email bạn nhận được trên Amazon S3 bucket.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Use AWS CloudTrail to log Amazon SES API calls that you make using the console or the Amazon SES API.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Sử dụng AWS CloudTrail để lưu lại log Amazon SES API đã sử dụng bằng bảng điều khiển Amazon SES API.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Publish your email sending events to Amazon CloudWatch or Amazon Kinesis Data Firehose. If you publish your email sending events to Kinesis Data Firehose, you can access them in Amazon Redshift, Amazon Elasticsearch Service, or Amazon S3.&lt;/p&gt;
</description>
        <pubDate>Mon, 15 Mar 2021 07:48:45 +0700</pubDate>
        <link>http://localhost:4000/tech/2021/03/15/Amazon-Simple-Email-Serivce/</link>
        <guid isPermaLink="true">http://localhost:4000/tech/2021/03/15/Amazon-Simple-Email-Serivce/</guid>
        
        
        <category>tech</category>
        
      </item>
    
      <item>
        <title>Explaining magic behind popular Ruby on Rails code</title>
        <description>&lt;blockquote&gt;

  &lt;p&gt;Link bài viết gốc: &lt;a href=&quot;https://longliveruby.com/articles/the-magic-behind-ruby-code&quot;&gt;Explaining magic behind popular Ruby on Rails code&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;explaining-magic-behind-popular-ruby-on-rails-code&quot;&gt;Explaining magic behind popular Ruby on Rails code&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;Giải thích những điều thú vị đằng sau những mã code Ruby on Rails thường xuyên được sử dụng&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Explore the Ruby code behind popular solutions to learn how they were created&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Khám phá Ruby code đằng sau những giải pháp phổ biến để tìm hiểu cách chúng được tạo ra&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ruby language allows us to easily create beautiful DSL’s and design complex libraries that anybody can easily use, despite programming experience. The code often looks perfect, but sometimes it is not clear how it was achieved under the hood. In this article, I explain a few solutions that are quite popular among many gems, and you can easily use it in your projects once you understand how you can build a similar code.&lt;/p&gt;

&lt;blockquote&gt;

  &lt;p&gt;Ngôn ngữ Ruby cho phép chúng ta dễ dàng tạo ra các DSL đẹp và cú pháp thiết kế thư viện mà bất cứ ai cũng có thể dễ dàng sử dụng bất chấp với kinh nghiệm lập trình. Code thường xuyên trông thật hoàn hảo, nhưng đội khi lại không rõ ràng là làm thế nào mà nó lại giải quyết được vấn đề đó. Trong bài này, tôi sẽ giải thích một vài giải pháp khá phổ biến được sử dụng ở tương đối nhiều &lt;code&gt;gems&lt;/code&gt;, và bạn có thể dễ dàng sử dụng nó trong dự án của bạn một khi bạn hiểu cách có thể xây dựng được 1 đoạn code tương tự.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;the-config-way-of-setting-variables-cách-để-thiết-lập-cài-đặt-các-biến&quot;&gt;The config-way of setting variables (Cách để thiết lập cài đặt các biến)&lt;/h3&gt;
&lt;p&gt;You can see this code in almost every Ruby gem that utilizes initializers to set some variables needed for later use:&lt;/p&gt;

&lt;blockquote&gt;

  &lt;p&gt;Bạn có thể thấy đoạn coe này ở hầu hết các Ruby gem được sử dụng để khởi tạo các biến cần thiết cho sử dụng sau này:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;SomeGem.configure do |config|
  config.api_key = 'api_key'
  config.app_name = 'My App'
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This way of setting variables is very readable and easily extendable. It works like any other method that yields something. While the each method yields elements of the array, in the above example, the configure method yields the instance of the Configuration class (or any other). It allows us to set attributes of this class inside the block.&lt;/p&gt;

&lt;blockquote&gt;

  &lt;p&gt;Bằng cách này các biến rất dễ dàng để đọc và mở rộng. Nó hoạt động tương tự các method về &lt;code&gt;yields&lt;/code&gt;. Trong khi mỗi phương thức &lt;code&gt;yields&lt;/code&gt;
You can build your configurator this way:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code&gt;module SomeGem
  class &amp;lt;&amp;lt; self
    attr_accessor :configuration

    def configure
      self.configuration ||= Configuration.new
      yield(configuration)
    end
  end

  class Configuration
    attr_accessor :api_key, :app_name
  end
end
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Mon, 15 Mar 2021 07:48:45 +0700</pubDate>
        <link>http://localhost:4000/tech/2021/03/15/Magic-behing-popular-ruby-code-copy/</link>
        <guid isPermaLink="true">http://localhost:4000/tech/2021/03/15/Magic-behing-popular-ruby-code-copy/</guid>
        
        
        <category>tech</category>
        
      </item>
    
      <item>
        <title>10 Error status codes khi xây dựng API và cách giải quyết chúng</title>
        <description>&lt;p&gt;Link bài viết gốc:
&lt;a href=&quot;https://www.moesif.com/blog/technical/monitoring/10-Error-Status-Codes-When-Building-APIs-For-The-First-Time-And-How-To-Fix-Them/&quot;&gt;https://www.moesif.com/blog/technical/monitoring/10-Error-Status-Codes-When-Building-APIs-For-The-First-Time-And-How-To-Fix-Them/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mọi thứ không phải lúc nào cũng dễ dàng khi bạn lần đầu sử dụng API, đặc biệt hơn nếu đây là lần đầu bạn tích hợp API sang một hệ thống khác. Thông thường tài liệu hay bị thiếu các quy định về lỗi, căn bản là do việc đoán trước ra việc chạy đúng có vẻ dễ dàng hơn, hơn là suy nghĩ về việc sẽ chạy sai.&lt;/p&gt;

&lt;p&gt;Trong HTTP, có nhiều status codes có thể cung cấp cho bạn ý tưởng về việc gì sẽ xảy ra khi bạn gọi tới một API. Các status code tiêu chuẩn từ 100 tới 511, và mỗi status đều mang một ý nghĩa riêng, nhưng chỉ có lỗi từ 400 tới 511 là thông báo về lỗi.&lt;/p&gt;

&lt;p&gt;Hãy cùng xem 10 status codes phổ biến nhất, về cả phía client và server.&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;client-side-errors-lỗi-phía-người-dùng&quot;&gt;Client-side Errors (Lỗi phía người dùng)&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;Nhóm status codes 4XX luôn luôn liên quan tới client-side (lỗi phía người dùng hay browser), nhưng những thay đổi trên API có thể gây ra chúng. Dưới đây là 5 lỗi phổ biến nhất và cách để giải quyết chúng:&lt;/p&gt;

&lt;h3 id=&quot;404-not-found&quot;&gt;404 Not found&lt;/h3&gt;

&lt;p&gt;Đây là lỗi phổ biến nhất mà chúng ta thường gặp. Nó chỉ ra url bạn đã sử dụng không tồn tại trên server.&lt;/p&gt;

&lt;p&gt;Khi mà đó là lỗi 4XX, điều này có nghĩa là phía client đang có gì đó sai, nó cũng có thể chỉ ra là phía server cũng đang tồi tại vấn đề.&lt;/p&gt;

&lt;p&gt;Cách giải quyết tốt nhất là giữ nguyên trang thái của client trước khi chắc chắn răng API đang không có vấn đề gì cả.&lt;/p&gt;

&lt;h3 id=&quot;401-unauthorized&quot;&gt;401 Unauthorized&lt;/h3&gt;

&lt;p&gt;Lỗi này có nghĩa rằng bạn chưa xác thực đối với API đó. API đang không biết bạn là ai và sẽ không phục vụ yêu cầu của bạn.&lt;/p&gt;

&lt;p&gt;Điều bạn cần làm nhất là đăng kí và sử dụng một một phương thức xác thực thoả mãn để có thể sử dụng API đó.&lt;/p&gt;
&lt;h3 id=&quot;403-forbidden&quot;&gt;403 Forbidden&lt;/h3&gt;

&lt;p&gt;Lỗi forbidden (bị cấm) cho thấy rằng bạn không có quyền truy cập vào URL đó. Điểm khác biệt với Unauthorized (401) là bạn đã được xác thực, nhưng vai trò của người dùng đó không được cho phép vào request đó.&lt;/p&gt;

&lt;p&gt;Điều đó cũng xảy ra khi bạn có vấn đề với việc xác thực, giống như là sử dụng sai API key hoặc là cố gắng truy cập vào 1 tính năng gói đăng kí của bạn không cho phép sử dụng.&lt;/p&gt;

&lt;h3 id=&quot;400-bad-request&quot;&gt;400 Bad Request&lt;/h3&gt;

&lt;p&gt;Bad reques status là 1 trong những lỗi thông báo chung nhất. Nó ngụ ý rằng bạn đã làm điều gì đó chưa đúng trong request của bạn. Nếu không có thêm thông tin được cung cấp trong body của kết quả trả về, bạn phải check lại tài liệu. Bạn có thể bị thiếu truy vấn hoặc trong thẻ body của request, hoặc là header có thể đang bị lỗi. Nó có thể cũng là một số request của bạn đang không đúng format.&lt;/p&gt;

&lt;h3 id=&quot;429-too-many-requests&quot;&gt;429 Too Many Requests&lt;/h3&gt;

&lt;p&gt;Hầu hết các gói đăng kí API đều có giới hạn - đối với các gói rẻ hơn, càng ít hơn số lượng request mỗi giây được cho phép API của bạn truy cập. Có&lt;/p&gt;

&lt;p&gt;Nếu bạn đang gửi nhiều request trên 1 khoảng thời gian ngắn, xem xét điều chỉnh chúng ở phía client. Status này cũng biểu thị rằng bạn bạn đã đạt giới hạn hàng ngày, hàng tuần, hàng tháng trong tài khoản đó.&lt;/p&gt;

&lt;p&gt;Đôi khi API nghe có vẻ phù hợp cho tới khi bạn thấy giới hạn, và đột ngột nó không hoạt động cho trường hợp của bạn nữa. Kiểm tra phần nào của API bạn đã đăng kí trước khi tích hợp, nếu không bạn có thể gặp sự cố vài tuần hoặc vài tháng sau khi tích hợp API.&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;server-side-errors-lỗi-phía-server&quot;&gt;Server-Side Errors (Lỗi phía server)&lt;/h2&gt;
&lt;hr /&gt;

&lt;p&gt;Nhóm 5XX các status luôn luôn được sử dụng cho lỗi phía server (server-side), nhưng một yêu cầu không hợp lệ sẽ phản hồi cho phía client bằng 4XX dãn tới lỗi 5XX nếu không được bắt đúng trên máy chủ. Dưới đây là 5 lỗi phổ biến nhất và cách khắc phục chúng:&lt;/p&gt;

&lt;h3 id=&quot;500-internal-server-error&quot;&gt;500 Internal Server Error&lt;/h3&gt;

&lt;p&gt;Status này có thể có nghĩa rằng có bất cứ lỗi gì, nhưng luôn luôn thể hiện rằng server đang có vấn đề.  Nó có thể được gây ra bởi 1 yêu cầu có vấn đề.&lt;/p&gt;

&lt;p&gt;Kiểm tra kĩ lại tài liệu để chắc chắn rằng mọi thứ đang hoạt động đúng: query, body, headers, format,…&lt;/p&gt;

&lt;p&gt;Nếu không giải quyể được vấn đề, nó có nghĩa rằng bản cập nhật API đã có lỗi về code, hoặc dữ liệu từ API đã được lấy từ một server khác mà ở đó có vấn đề. Trong trường hợp này, bạn nên liên hệ lại với đội cung cấp API để được hỗ trợ.&lt;/p&gt;

&lt;h3 id=&quot;502-bad-gateway&quot;&gt;502 Bad Gateway&lt;/h3&gt;

&lt;p&gt;Trạng thái này cho biết server bạn đang sử dụng không phải là máy chủ thực tế. Máy chủ proxy cố gắng sử dụng API server bằng tên của bạn. Status này cũng chỉ ra rằng API server không phản hồi lại request. Điều đó cũng có thể liên quan tới vấn đề về mạng, hoặc đơn giản là server API đang bị crashed hoặc là đang bị tắt cho việc maintenance.&lt;/p&gt;

&lt;p&gt;Vấn đề này thì luôn luôn là vấn đề tạm thời và có nên được giải quyết bởi nhà cung cấp API, nhưng bạn cần phải liên hệ giúp đỡ nếu nó vẫn tiếp tục diễn ra.&lt;/p&gt;

&lt;h3 id=&quot;503-service-unavailable&quot;&gt;503 Service Unavailable&lt;/h3&gt;

&lt;p&gt;Dịch vụ không sẵn sàng có nghĩa là server đang bị quá tải (overloaded). Quá nhiều request API đã được gửi và hiện tại API không thể xử lý thêm. Vấn đề này tự giải quyết khi client gửi ít request đi, nhưng nó cũng có thể có nghĩa rằng API đã không có kể hoặc đủ nguồn lực cung cấp cho tất cả người dùng của họ.&lt;/p&gt;

&lt;p&gt;Nếu nó phù hợp với trường hợp sử dụng của bạn, bạn có thể làm cho phía client đợi và gửi lại request một vài lần nữa. Nhưng nếu vấn đề này vẫn tiếp tục hiển thị, bạn cần phải liên hệ với nhà cung cấp API.&lt;/p&gt;

&lt;h3 id=&quot;504-gateway-timed-out&quot;&gt;504 Gateway Timed Out&lt;/h3&gt;

&lt;p&gt;Giống như lỗi 502 (Bad gateway), điều này cho bạn biết rằng server bạn đang gọi là một proxy cho 1 server API. Lần này, vấn đề là máy chủ API trả lời không kịp thời.&lt;/p&gt;

&lt;p&gt;Điều này có thê rlieen quan đến đội trễ matngj cao giữa proxy và máy chủ API. Điều đó cũng có nghĩa rằng máy chủ API tốn nhiều thời gian để xử lý request của bạn.&lt;/p&gt;

&lt;p&gt;Để giải quyết vấn đề này, kiểm tra nếu nội dung của request có thể liên quan tới việc timeout. Nếu bạn request quá nhiều dữ liệu hoặc tín toán tốn quá nhiều thời gian, bạn cần phải thử lại.&lt;/p&gt;

&lt;p&gt;Nếu bạn nghĩ rằng request của bạn đang hợp lý và trạng thái không thay đổi, liên hệ hộ trợ ngay.&lt;/p&gt;

&lt;h3 id=&quot;501-not-implemented&quot;&gt;501 Not Implemented&lt;/h3&gt;

&lt;p&gt;Trạng thái không được triểm khai có liên quan tới phương thức HTTP bạn đã sử dụng để request URL. Bạn có thể thử lại bằng phương thức khác.&lt;/p&gt;

&lt;p&gt;Thông thường, request với phương thức (method) sai thường nhận được với kết quả là 404 not found. Trạng thái not-implemented ngụ ý rằng phương thức này đã không được triển khai. Nhà cung cấp API có thể sử dụng status đó để thông báo với client rằng phương thức này sẽ có thể truy cập được trong tương lai.&lt;/p&gt;
</description>
        <pubDate>Wed, 10 Mar 2021 07:48:45 +0700</pubDate>
        <link>http://localhost:4000/tech/2021/03/10/10-errors-when-build-api-and-how-to-fix-them/</link>
        <guid isPermaLink="true">http://localhost:4000/tech/2021/03/10/10-errors-when-build-api-and-how-to-fix-them/</guid>
        
        
        <category>tech</category>
        
      </item>
    
      <item>
        <title>Bản thân bạn đang ở đâu ?</title>
        <description>&lt;p&gt;Q: Làm sao để ngưng lười biếng và trì hoãn?&lt;/p&gt;

&lt;p&gt;A: Farhan Shamir&lt;/p&gt;

&lt;p&gt;Link: https://qr.ae/pNKIeo&lt;/p&gt;

&lt;p&gt;Khi 13 tuổi, tôi đã tham gia Olympic Thiên văn học Quốc tế 2013 nhưng không thể giành được huy chương. Tôi ra về trong một tâm trạng buồn bã và đau đớn. Nhưng tôi nghĩ mình xứng đáng với điều đó: có lẽ tôi cần phải đập đầu của mình vào tường một lần để biết được rằng lười biếng là liều thuốc độc giết chết thành công. Nó gặm nhấm cuộc sống của bạn trong khi bạn đang xem TV, lướt Facebook.&lt;/p&gt;

&lt;p&gt;Kể từ đó, tôi đăng xuất Facebook, bắt đầu luyện tập cho Olympic – cố gắng kết hợp cả khoa học và bóng rổ. Và rồi, tôi đã giành được 6 huy chương Olympic Khoa học quốc tế, 5 huy chương vàng Giải vô địch bóng rổ quốc gia và được nhận vào Đại học Cambridge.&lt;/p&gt;

&lt;p&gt;Bây giờ, tôi tự hỏi mình: Làm cách nào tôi đã vượt qua được sự lười biếng? Tôi đã bắt đầu như thế nào?&lt;/p&gt;

&lt;p&gt;Và rồi tôi nhận ra, câu trả lời, thật sự đơn giản…&lt;/p&gt;

&lt;p&gt;CHỈ LÀ TÔI HÀNH ĐỘNG&lt;/p&gt;

&lt;p&gt;Không có bí mật nào ở đây! Cho dù bạn đọc bao nhiêu lời khuyên như “Để tiêu diệt sự lười biếng thì bạn cần 5 điều sau đây” trên Quora hay các blog phát triển bản thân (Self-development) thì vẫn bạn sẽ không bao giờ thành công nếu bạn không lựa chọn.&lt;/p&gt;

&lt;p&gt;Khi phải lựa chọn giữa việc chơi game hay làm việc, tôi chọn vế sau.
Khi phải lựa chọn giữa việc đi chơi với bạn bè hay tập ném bóng, tôi chọn vế sau&lt;/p&gt;

&lt;p&gt;Bạn KHÔNG THỂ ngăn được sự lười biếng của mình nếu bạn không thể sử dụng sức mạnh ý chí của mình để tạo nên sự khác biệt!
Tôi nghĩ rằng tất cả chúng ta đều biết cách để chấm dứt sự lười biếng. Một thứ mà chỉ một vài người trong chúng ta lựa chọn…&lt;/p&gt;

&lt;p&gt;HÀNH ĐỘNG&lt;/p&gt;

&lt;p&gt;Không phải ngày mai hay sinh nhật. Bắt đầu. NGAY LẬP TỨC!&lt;/p&gt;

&lt;p&gt;Lựa chọn. Quyết định cho chính mình. Bạn muốn gì?&lt;/p&gt;

&lt;p&gt;Một cuộc sống vui vẻ? Thú vị? Đầy phiêu lưu?&lt;/p&gt;

&lt;p&gt;TỐT! Bắt đầu hành động ngay đi!&lt;/p&gt;

&lt;p&gt;Cuộc sống mơ ước luôn ở trong tầm tay bạn. Luôn thúc đẩy bản thân mình.
Chỉ cần luôn thúc đẩy bản thân mình thôi.&lt;/p&gt;
</description>
        <pubDate>Tue, 09 Jun 2020 07:48:45 +0700</pubDate>
        <link>http://localhost:4000/life/2020/06/09/keep/</link>
        <guid isPermaLink="true">http://localhost:4000/life/2020/06/09/keep/</guid>
        
        
        <category>life</category>
        
      </item>
    
      <item>
        <title>Rails Map Vs Pluck</title>
        <description>
</description>
        <pubDate>Wed, 27 May 2020 00:00:00 +0700</pubDate>
        <link>http://localhost:4000/2020/05/27/rails-map-vs-pluck/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/05/27/rails-map-vs-pluck/</guid>
        
        
      </item>
    
      <item>
        <title>Chuan Hoa Csdl</title>
        <description>
</description>
        <pubDate>Wed, 27 May 2020 00:00:00 +0700</pubDate>
        <link>http://localhost:4000/2020/05/27/chuan-hoa-csdl/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/05/27/chuan-hoa-csdl/</guid>
        
        
      </item>
    
      <item>
        <title>Rails cucumber - capybara notes</title>
        <description>
</description>
        <pubDate>Fri, 08 May 2020 19:48:45 +0700</pubDate>
        <link>http://localhost:4000/tech/2020/05/08/rails-rails-ckeditor-mention-with-elaticsearch/</link>
        <guid isPermaLink="true">http://localhost:4000/tech/2020/05/08/rails-rails-ckeditor-mention-with-elaticsearch/</guid>
        
        
        <category>tech</category>
        
      </item>
    
      <item>
        <title>Rails elaticsearch - 1.Introduction</title>
        <description>
</description>
        <pubDate>Fri, 08 May 2020 19:48:45 +0700</pubDate>
        <link>http://localhost:4000/tech/2020/05/08/rails-elaticsearch-1-introduction/</link>
        <guid isPermaLink="true">http://localhost:4000/tech/2020/05/08/rails-elaticsearch-1-introduction/</guid>
        
        
        <category>tech</category>
        
      </item>
    
      <item>
        <title>Test behavior với cucumber và capybara</title>
        <description>&lt;p&gt;Hello cả nhà, cũng tương đối lâu rồi mình chưa quay lại. Một là do có sự thay đổi công việc nên hơi bận bịu. Hai là công việc mới khiến mình chưa thể cover được thời gian của bản thân. Hôm nay mình note lại một trong những điều khá hay ho mà mình gặp phải trong dự án.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Nhắc đến test trong rails hẳn ai cũng nhắc đến Rspec cùng tác dụng và sự vi diệu của nó nhưng Rspec chỉ hỗ trợ&lt;/p&gt;

&lt;p&gt;Đầu tiên nhắc đến test, ngay từ lúc đầu giữa các khái niệm &lt;code&gt;rspec&lt;/code&gt;, &lt;code&gt;capybara&lt;/code&gt; và &lt;code&gt;cucumber&lt;/code&gt; nên mình cũng sẽ nhắc lại và so sánh để &lt;code&gt;cùng&lt;/code&gt; nhớ lại ;)&lt;/p&gt;

&lt;hr /&gt;

</description>
        <pubDate>Fri, 08 May 2020 19:48:45 +0700</pubDate>
        <link>http://localhost:4000/tech/2020/05/08/rails-cucumber-capybara-notes/</link>
        <guid isPermaLink="true">http://localhost:4000/tech/2020/05/08/rails-cucumber-capybara-notes/</guid>
        
        
        <category>tech</category>
        
      </item>
    
      <item>
        <title>Đừng bao giờ `git push -f`</title>
        <description>
</description>
        <pubDate>Fri, 08 May 2020 07:48:45 +0700</pubDate>
        <link>http://localhost:4000/tech/2020/05/08/dung-bao-gio-git-push-f/</link>
        <guid isPermaLink="true">http://localhost:4000/tech/2020/05/08/dung-bao-gio-git-push-f/</guid>
        
        
        <category>tech</category>
        
      </item>
    
  </channel>
</rss>
